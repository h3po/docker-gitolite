name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron:  '0 0 * * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/gitolite

jobs:

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Image Update Checker
      id: updatecheck
      uses: lucacome/docker-image-update-checker@v1.1.1
      with:
        base-image: debian:stable-slim
        image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
    
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      if: steps.updatecheck.outputs.needs-updating == 'true'
                 
    - name: Get the latest gitolite release tag
      run: echo "GITOLITE_VERSION=$(curl -s 'https://api.github.com/repos/sitaramc/gitolite/tags' | jq -r .[0].name)" >> $GITHUB_ENV
      if: steps.updatecheck.outputs.needs-updating == 'true'
  
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      if: steps.updatecheck.outputs.needs-updating == 'true'
  
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        labels: ${{ steps.meta.outputs.labels }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.GITOLITE_VERSION }}
        build-args: GITOLITE_VERSION=${{ env.GITOLITE_VERSION }}
      if: steps.updatecheck.outputs.needs-updating == 'true'
